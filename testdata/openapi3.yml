openapi: 3.0.3
info:
  title: test spec
  version: 0.0.1
paths:
  /users:
    get:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    username:
                      type: string
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '201':
          description: OK
        '400':
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
  /users/{id}:
    get:
      parameters:
        - description: ID
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      username:
                        type: string
  /help:
    post:
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                content:
                  type: string
              required:
                - name
                - content
      responses:
        '201':
          description: OK
        '400':
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
  /upload:
    post:
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
          multipart/form-data:
            schema:
              type: object
              allOf:
                - $ref: '#/components/schemas/Username'
                -
                  properties:
                    upload0:
                      type: string
                      format: binary
                    upload1:
                      type: string
                      format: binary
            encoding:
              upload0:
                contentType: image/png, image/jpeg
              upload1:
                contentType: image/png, image/jpeg
      responses:
        '201':
          description: OK
    put:
      requestBody:
        content:
          image/png:
            schema:
              type: string
              format: binary
      responses:
        '201':
          description: OK
  /notfound:
    get:
      responses:
        '404':
          description: Notfound
  /private:
    get:
      responses:
        '200':
          description: OK
        '403':
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
  /redirect:
    get:
      responses:
        '302':
          description: Found
        '404':
          description: Notfound
  /ping:
    get:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                  single_escaped:
                    type: string
                required:
                  - url
components:
  schemas:
    Username:
      type: object
      properties:
        username:
          type: string
